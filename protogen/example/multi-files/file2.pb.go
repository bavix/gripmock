// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.4
// source: file2.proto

package multi_files

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type Request2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request2) Reset() {
	*x = Request2{}
	mi := &file_file2_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request2) ProtoMessage() {}

func (x *Request2) ProtoReflect() protoreflect.Message {
	mi := &file_file2_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request2.ProtoReflect.Descriptor instead.
func (*Request2) Descriptor() ([]byte, []int) {
	return file_file2_proto_rawDescGZIP(), []int{0}
}

func (x *Request2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The response message containing the greetings
type Reply2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ReturnCode    int32                  `protobuf:"varint,2,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reply2) Reset() {
	*x = Reply2{}
	mi := &file_file2_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reply2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply2) ProtoMessage() {}

func (x *Reply2) ProtoReflect() protoreflect.Message {
	mi := &file_file2_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply2.ProtoReflect.Descriptor instead.
func (*Reply2) Descriptor() ([]byte, []int) {
	return file_file2_proto_rawDescGZIP(), []int{1}
}

func (x *Reply2) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Reply2) GetReturnCode() int32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

var File_file2_proto protoreflect.FileDescriptor

const file_file2_proto_rawDesc = "" +
	"\n" +
	"\vfile2.proto\x12\n" +
	"multifiles\"\x1e\n" +
	"\bRequest2\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"C\n" +
	"\x06Reply2\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1f\n" +
	"\vreturn_code\x18\x02 \x01(\x05R\n" +
	"returnCode2A\n" +
	"\tGripmock2\x124\n" +
	"\bSayHello\x12\x14.multifiles.Request2\x1a\x12.multifiles.Reply2B8Z6github.com/bavix/gripmock/protogen/example/multi-filesb\x06proto3"

var (
	file_file2_proto_rawDescOnce sync.Once
	file_file2_proto_rawDescData []byte
)

func file_file2_proto_rawDescGZIP() []byte {
	file_file2_proto_rawDescOnce.Do(func() {
		file_file2_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file2_proto_rawDesc), len(file_file2_proto_rawDesc)))
	})
	return file_file2_proto_rawDescData
}

var file_file2_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_file2_proto_goTypes = []any{
	(*Request2)(nil), // 0: multifiles.Request2
	(*Reply2)(nil),   // 1: multifiles.Reply2
}
var file_file2_proto_depIdxs = []int32{
	0, // 0: multifiles.Gripmock2.SayHello:input_type -> multifiles.Request2
	1, // 1: multifiles.Gripmock2.SayHello:output_type -> multifiles.Reply2
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_file2_proto_init() }
func file_file2_proto_init() {
	if File_file2_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file2_proto_rawDesc), len(file_file2_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file2_proto_goTypes,
		DependencyIndexes: file_file2_proto_depIdxs,
		MessageInfos:      file_file2_proto_msgTypes,
	}.Build()
	File_file2_proto = out.File
	file_file2_proto_goTypes = nil
	file_file2_proto_depIdxs = nil
}
